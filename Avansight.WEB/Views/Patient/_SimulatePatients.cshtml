@model Avansight.Domain.BLL.SimulatePatientViewModel


<div class="row">
    <div class="col-md-10">

        <form id="SimulatePatientForm" asp-action="_SimulatePatient">

            <div class="row">

                <div class="col-md-6">

                    <div class="form-group">
                        <label class="control-label">Sample Size</label>
                        <input asp-for="SampleSize" class="form-control" />
                        <span asp-validation-for="SampleSize" class="text-danger"></span>
                    </div>

                </div>

                <div class="col-md-6">

                </div>

            </div>

            <div class="row">

                <div class="col-md-6">
                    <div class="form-group">
                        <label class="control-label">Gender Male (Weight)</label>
                        <input asp-for="GenderMale" class="form-control" />
                        <span asp-validation-for="GenderMale" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        <label class="control-label">Gender Female (Weight)</label>
                        <input asp-for="GenderFemale" class="form-control" />
                        <span asp-validation-for="GenderFemale" class="text-danger"></span>
                    </div>
                </div>

            </div>

            <div class="row">

                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">Age (21-30)</label>
                        <input asp-for="Age20s" class="form-control" />
                        <span asp-validation-for="Age20s" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">Age (31-40)</label>
                        <input asp-for="Age30s" class="form-control" />
                        <span asp-validation-for="Age30s" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">Age (41-50)</label>
                        <input asp-for="Age40s" class="form-control" />
                        <span asp-validation-for="Age40s" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">Age (51-60)</label>
                        <input asp-for="Age50s" class="form-control" />
                        <span asp-validation-for="Age50s" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">Age (61-70)</label>
                        <input asp-for="Age60s" class="form-control" />
                        <span asp-validation-for="Age60s" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-md-2">

                </div>

            </div>

            <div class="form-group">
                <input type="button" onclick="GeneratePatients()" value="Generate Patients" class="btn btn-primary" />
            </div>

            <div id="ChartDiv">
                <div class="row">
                    <div class="col-md-6">
                        <div id="AgeDesChart" class="chart_border"></div>
                    </div>
                    <div class="col-md-6">
                        <div id="GenderDesChart" class="chart_border"></div>
                    </div>
                </div>
                <div class="form-group">
                    <input type="button" onclick="SaveGeneratedRecords()" value="Save Generated Records" class="btn btn-success" />
                </div>
            </div>

        </form>

        <script type="text/javascript">

            function GeneratePatients() {

                $('#SimulatePatientForm').validate();

                if ($('#SimulatePatientForm').valid()) {

                    var url = "@Url.Action("Generate", "Patient")";

                    var formData = new FormData();
                    formData.append("SampleSize", $("#SampleSize").val());
                    formData.append("GenderMale", $("#GenderMale").val());
                    formData.append("GenderFemale", $("#GenderFemale").val());
                    formData.append("Age20s", $("#Age20s").val());
                    formData.append("Age30s", $("#Age30s").val());
                    formData.append("Age40s", $("#Age40s").val());
                    formData.append("Age50s", $("#Age50s").val());
                    formData.append("Age60s", $("#Age60s").val());

                    $.ajax({
                        type: 'POST',
                        url: url,
                        data: formData,
                        processData: false,
                        contentType: false
                    }).done(function (response) {
                        SetUpInitialGraphs(response);
                    });

                }
            }

            function SetUpInitialGraphs(response) {
                try {
                    if (response.status == "Success") {
                        SetupAgeDestribution(response);
                        SetupGenderDistribution(response);
                        document.getElementById("ChartDiv").style.display = "block";
                    } else {
                        LoadError("Something went wrong! Please try again");
                        document.getElementById("ChartDiv").style.display = "none";
                    }
                }
                catch (e) {
                    LoadError("Something went wrong! Please try again");
                    document.getElementById("ChartDiv").style.display = "none";
                }
            }

            function SetupGenderDistribution(response) {
                var maleCount = response.genderDistribution.maleCount;
                var femaleCount = response.genderDistribution.femaleCount;

                const data = {
                    rows: [
                        ['Male', maleCount],
                        ['Female', femaleCount]
                    ],

                    columns: [
                        {
                            type: DomoPhoenix.DATA_TYPE.STRING,
                            name: 'Gender',
                            mapping: DomoPhoenix.MAPPING.ITEM
                        },
                        {
                            type: DomoPhoenix.DATA_TYPE.DOUBLE,
                            name: 'Count',
                            mapping: DomoPhoenix.MAPPING.VALUE
                        }
                    ]
                };

                const options = {
                    //width: 600,
                    //height: 500
                };

                const chart = new DomoPhoenix.Chart(DomoPhoenix.CHART_TYPE.DONUT, data, options);
                document.getElementById('GenderDesChart').appendChild(chart.canvas);
                chart.render();

                chart.resize(300, 200);
            }

            function SetupAgeDestribution(response) {
                var age20Count = response.ageDistribution.age20s;
                var age30Count = response.ageDistribution.age30s;
                var age40Count = response.ageDistribution.age40s;
                var age50Count = response.ageDistribution.age50s;
                var age60Count = response.ageDistribution.age60s;

                const data = {
                    rows: [
                        ['20-30', age20Count],
                        ['30-40', age30Count],
                        ['40-50', age40Count],
                        ['50-60', age50Count],
                        ['60-70', age60Count]
                    ],
                    columns: [
                        {
                            type: DomoPhoenix.DATA_TYPE.STRING,
                            name: 'Age Range',
                            mapping: DomoPhoenix.MAPPING.ITEM
                        },
                        {
                            type: DomoPhoenix.DATA_TYPE.DOUBLE,
                            name: 'Count',
                            mapping: DomoPhoenix.MAPPING.VALUE
                        }
                    ]
                };

                const options = { /* ... */ };

                const chart = new DomoPhoenix.Chart(DomoPhoenix.CHART_TYPE.BAR, data, options);
                document.getElementById('AgeDesChart').appendChild(chart.canvas);
                chart.render();

                chart.resize(300, 200);
            }

        </script>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
